#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Board\r\n
comment1.params=
comment1.target=void\ setBoard()
comment2.params=number\ layout
comment2.target=Square\ createSquare(int,\ Layout)
comment3.params=counter
comment3.target=java.lang.String\ getColour(int)
comment3.text=\r\n\ \ \ \ private\ void\ addRow1()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ LadderSquare(++counter,\ getColour(counter),\ 13);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ LadderSquare(++counter,\ getColour(counter),\ 2);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ }\r\n\ \ \ \ private\ void\ addRow2()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ SnakeSquare(++counter,\ getColour(counter),\ 10);\r\n\ \ \ \ }\r\n\ \ \ \ private\ void\ addRow3()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ SnakeSquare(++counter,\ getColour(counter),\ 3);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ LadderSquare(++counter,\ getColour(counter),\ 10);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ SnakeSquare(++counter,\ getColour(counter),\ 13);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ LadderSquare(++counter,\ getColour(counter),\ 2);\r\n\ \ \ \ }\r\n\ \ \ \ private\ void\ addRow4()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ LadderSquare(++counter,\ getColour(counter),\ 11);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ }\r\n\ \ \ \ private\ void\ addRow5()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ }\r\n\ \ \ \ private\ void\ addRow6()\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ SnakeSquare(++counter,\ getColour(counter),\ 12);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ SnakeSquare(++counter,\ getColour(counter),\ 13);\r\n\ \ \ \ \ \ \ \ squares[counter]\ \=\ new\ Square(++counter,\ getColour(counter));\r\n\ \ \ \ }\r\n
comment4.params=player
comment4.target=void\ move(Player)
numComments=5
